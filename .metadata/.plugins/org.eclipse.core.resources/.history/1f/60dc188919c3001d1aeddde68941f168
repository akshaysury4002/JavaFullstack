package com.as;

import java.io.*;


public class FileHandeling {
	
	public void demo1()
	{
		//File file=new File("java.txt"); //its a file
		File file=new File("./files"); //its a directory
		
		if(file.isDirectory())
		{
			System.out.println("its a directory");
			
			
			File file2=new File(file, "akshay");
	
			 boolean stsSub = file2.exists();
	         System.out.println(!stsSub ? "‚úÖ Successfuly Created" : "‚ùå Directory Already Exists");
	            if(!stsSub)
	            {
	                file2.mkdir();
	            
	            File subFile = new File(file2, "abc.txt");
	            boolean sts = false;
	            try {
	                sts = subFile.createNewFile();
	            } catch (IOException e) {
	                e.printStackTrace();
	            }
	            System.out.println(sts ? "‚úÖ Successfuly Created" : "‚ùå File Already Exists");
	            }
			
		}
		else
		{
			System.out.println("its a file");
		}
		
	}
	public void demo2()
	{
		File file=new File("java.txr");
		System.out.println(file.getFreeSpace());
		System.out.println(file.getTotalSpace());
		System.out.println( file.getUsableSpace());
        
       
	}
	
	public void demo3()
	{
		File file=new File("java.txt");
		Writer writer=null;
		try {
			writer=new FileWriter(file);
			 writer.write("This is first hello word üòÄüòÄüòÄ");
			
		}catch (IOException e) {
            System.out.println("‚ùå Problem in creating/writing file");
        }finally {
            try {
                writer.close();
            } catch (IOException e) {
                System.out.println("‚ùå Problem in closing file");
            }
        }
	}
	 public void demo4()  //writing to files (character based)
	 {
	        File file = new File("java.txt");
	        try (Writer writer = new FileWriter(file)) {
	            writer.write("This is first hello word üòÄüòÄüòÄ");
	        } catch (IOException e) {
	            System.out.println("‚ùå Problem in creating/writing file");
	        }
	    }

	    public void demo5()  //Reading From files
	    {
	        File file = new File("java.txt");

	        try (Reader reader = new FileReader(file)) {
	            StringBuilder builder = new StringBuilder();
	            
	            // StringBuffer buffer  = new StringBuffer();
	            // String str = "";

	            while(true) {
	                int ch = reader.read();
	                if(ch == -1) break;
	                // str += String.valueOf(ch); // new string object every time
	                builder.append((char)ch);
	            }
	            System.out.println(builder.toString());
	        } catch (IOException e) {
	            System.out.println("‚ùå Problem in creating/writing file");
	        }
	    }
	    public void demo6() //Writing to files(Stream based)
	    {
	        final File file = new File("files/akshay/java.txt");
	        try(final OutputStream out = new FileOutputStream(file)) {
	            String dt = "hello word, first operation üòÄ";
	            out.write(dt.getBytes());
	        }catch(IOException e) {
	            System.out.println("‚ùå Trouble in working file");
	        }
	    }

	    public void demo7() //reading from files
	    {
	        final File file = new File("java.txt");
	        try(final InputStream in = new FileInputStream(file)) {

	            StringBuilder builder = new StringBuilder();

	            while(true) {
	                int ch = in.read();
	                if(ch == -1) break;
	                builder.append((char)ch);
	            }
	            System.out.println(builder.toString());
	        }catch(IOException e) {
	            System.out.println("‚ùå Trouble in working file");
	        }
	    }

}
